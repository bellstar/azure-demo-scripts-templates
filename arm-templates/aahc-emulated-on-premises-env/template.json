{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "This template deploys the emulated an on-premises environment for AAHC."
    },
    "parameters": {
        "numberOfAttendees": {
            "type": "int",
            "defaultValue": 8,
            "minValue": 1,
            "metadata": {
                "description": "Number of attendees."
            }
        },
        "deployEmulatedOnPremisesEnvironment": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "To deploy the emulated on-premises environment, select <strong>true</strong>. If you do not deploy the emulated on-premises environment, select <strong>false<strong>."
            }
        },
        "deployJumpboxVm": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "To deploy the jumpbox VMs for attendees, select <strong>true</strong>. If you do not deploy the jumpbox VMs, select <strong>false</strong> and input the dummy parameters to the following."
            }
        },
        "username": {
            "type": "string",
            "defaultValue": "localadmin",
            "minLength": 1,
            "maxLength": 20,
            "metadata": {
                "description": "The administrator username for the jumpbox VMs."
            }
        },
        "password": {
            "type": "secureString",
            "minLength": 12,
            "maxLength": 123,
            "metadata": {
                "description": "The administrator password for the jumpbox VMs."
            }
        },
        "vmOsImage": {
            "type": "string",
            "defaultValue": "Windows 10 Pro (127 GiB)",
            "allowedValues": [
                "Windows 10 Pro (127 GiB)",
                "Windows Server 2019 Datacenter (127 GiB)",
                "Windows Server 2019 Datacenter (30 GiB)"
            ],
            "metadata": {
                "description": "The operating system image for the jumpbox VMs."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "allowedValues": [
                "Standard_D2s_v3",
                "Standard_DS1_v2",
                "Standard_B2ms"
            ],
            "metadata": {
                "description": "The virtual machine size of the jumpbox VMs. <a href='http://go.microsoft.com/fwlink/?LinkId=2079859'>Learn more about Virtual Machine sizes</a>"
            }
        },
        "vmOsDiskType": {
            "type": "string",
            "defaultValue": "Premium SSD",
            "allowedValues": [
                "Standard HDD",
                "Standard SSD",
                "Premium SSD"
            ],
            "metadata": {
                "description": "The OS disk storage type of the jumpbox VMs. <a href='http://go.microsoft.com/fwlink/?LinkId=2077396'>Learn more about disk types</a>"
            }
        },
        "dailyAutoshutdownTime": {
            "type": "string",
            "defaultValue": "23:30",
            "allowedValues": [
                "00:00",
                "00:30",
                "01:00",
                "01:30",
                "02:00",
                "02:30",
                "03:00",
                "03:30",
                "04:00",
                "04:30",
                "05:00",
                "05:30",
                "06:00",
                "06:30",
                "07:00",
                "07:30",
                "08:00",
                "08:30",
                "09:00",
                "09:30",
                "10:00",
                "10:30",
                "11:00",
                "11:30",
                "12:00",
                "12:30",
                "13:00",
                "13:30",
                "14:00",
                "14:30",
                "15:00",
                "15:30",
                "16:00",
                "16:30",
                "17:00",
                "17:30",
                "18:00",
                "18:30",
                "19:00",
                "19:30",
                "20:00",
                "20:30",
                "21:00",
                "21:30",
                "22:00",
                "22:30",
                "23:00",
                "23:30"
            ],
            "metadata": {
                "description": "The time of day the auto-shutdown of the jumpbox VM will occur."
            }
        },
        "autoshutdownTimeZone": {
            "type": "string",
            "defaultValue": "Pacific Standard Time",
            "allowedValues": [
                "Afghanistan Standard Time",
                "Alaskan Standard Time",
                "Aleutian Standard Time",
                "Altai Standard Time",
                "Arab Standard Time",
                "Arabian Standard Time",
                "Arabic Standard Time",
                "Argentina Standard Time",
                "Astrakhan Standard Time",
                "Atlantic Standard Time",
                "AUS Central Standard Time",
                "Aus Central W. Standard Time",
                "AUS Eastern Standard Time",
                "Azerbaijan Standard Time",
                "Azores Standard Time",
                "Bahia Standard Time",
                "Bangladesh Standard Time",
                "Belarus Standard Time",
                "Bougainville Standard Time",
                "Canada Central Standard Time",
                "Cape Verde Standard Time",
                "Caucasus Standard Time",
                "Cen. Australia Standard Time",
                "Central America Standard Time",
                "Central Asia Standard Time",
                "Central Brazilian Standard Time",
                "Central Europe Standard Time",
                "Central European Standard Time",
                "Central Pacific Standard Time",
                "Central Standard Time",
                "Central Standard Time (Mexico)",
                "Chatham Islands Standard Time",
                "China Standard Time",
                "Cuba Standard Time",
                "Dateline Standard Time",
                "E. Africa Standard Time",
                "E. Australia Standard Time",
                "E. Europe Standard Time",
                "E. South America Standard Time",
                "Easter Island Standard Time",
                "Eastern Standard Time",
                "Eastern Standard Time (Mexico)",
                "Egypt Standard Time",
                "Ekaterinburg Standard Time",
                "Fiji Standard Time",
                "FLE Standard Time",
                "Georgian Standard Time",
                "GMT Standard Time",
                "Greenland Standard Time",
                "Greenwich Standard Time",
                "GTB Standard Time",
                "Haiti Standard Time",
                "Hawaiian Standard Time",
                "India Standard Time",
                "Iran Standard Time",
                "Israel Standard Time",
                "Jordan Standard Time",
                "Kaliningrad Standard Time",
                "Kamchatka Standard Time",
                "Korea Standard Time",
                "Libya Standard Time",
                "Line Islands Standard Time",
                "Lord Howe Standard Time",
                "Magadan Standard Time",
                "Magallanes Standard Time",
                "Marquesas Standard Time",
                "Mauritius Standard Time",
                "Mid-Atlantic Standard Time",
                "Middle East Standard Time",
                "Montevideo Standard Time",
                "Morocco Standard Time",
                "Mountain Standard Time",
                "Mountain Standard Time (Mexico)",
                "Myanmar Standard Time",
                "N. Central Asia Standard Time",
                "Namibia Standard Time",
                "Nepal Standard Time",
                "New Zealand Standard Time",
                "Newfoundland Standard Time",
                "Norfolk Standard Time",
                "North Asia East Standard Time",
                "North Asia Standard Time",
                "North Korea Standard Time",
                "Omsk Standard Time",
                "Pacific SA Standard Time",
                "Pacific Standard Time",
                "Pacific Standard Time (Mexico)",
                "Pakistan Standard Time",
                "Paraguay Standard Time",
                "Qyzylorda Standard Time",
                "Romance Standard Time",
                "Russia Time Zone 10",
                "Russia Time Zone 11",
                "Russia Time Zone 3",
                "Russian Standard Time",
                "SA Eastern Standard Time",
                "SA Pacific Standard Time",
                "SA Western Standard Time",
                "Saint Pierre Standard Time",
                "Sakhalin Standard Time",
                "Samoa Standard Time",
                "Sao Tome Standard Time",
                "Saratov Standard Time",
                "SE Asia Standard Time",
                "Singapore Standard Time",
                "South Africa Standard Time",
                "Sri Lanka Standard Time",
                "Sudan Standard Time",
                "Syria Standard Time",
                "Taipei Standard Time",
                "Tasmania Standard Time",
                "Tocantins Standard Time",
                "Tokyo Standard Time",
                "Tomsk Standard Time",
                "Tonga Standard Time",
                "Transbaikal Standard Time",
                "Turkey Standard Time",
                "Turks And Caicos Standard Time",
                "Ulaanbaatar Standard Time",
                "US Eastern Standard Time",
                "US Mountain Standard Time",
                "UTC",
                "UTC+12",
                "UTC+13",
                "UTC-02",
                "UTC-08",
                "UTC-09",
                "UTC-11",
                "Venezuela Standard Time",
                "Vladivostok Standard Time",
                "Volgograd Standard Time",
                "W. Australia Standard Time",
                "W. Central Africa Standard Time",
                "W. Europe Standard Time",
                "W. Mongolia Standard Time",
                "West Asia Standard Time",
                "West Bank Standard Time",
                "West Pacific Standard Time",
                "Yakutsk Standard Time"
            ],
            "metadata": {
                "description": "The time zone ID for auto-shutdown time."
            }
        }
    },
    "functions": [
        {
            "namespace": "aahc",
            "members": {
                "osImageIndex": {
                    "parameters": [
                        {
                            "type": "string",
                            "name": "label"
                        }
                    ],
                    "output": {
                        "type": "int",
                        "value": "[if(equals(parameters('label'), 'Windows 10 Pro (127 GiB)'), 0, if(equals(parameters('label'), 'Windows Server 2019 Datacenter (127 GiB)'), 1, if(equals(parameters('label'), 'Windows Server 2019 Datacenter (30 GiB)'), 2, 0)))]"
                    }
                },
                "diskTypeIndex": {
                    "parameters": [
                        {
                            "type": "string",
                            "name": "label"
                        }
                    ],
                    "output": {
                        "type": "int",
                        "value": "[if(equals(parameters('label'), 'Standard HDD'), 0, if(equals(parameters('label'), 'Standard SSD'), 1, if(equals(parameters('label'), 'Premium SSD'), 2, 1)))]"
                    }
                }
            }
        }
    ],
    "variables": {
        "location": "[resourceGroup().location]",
        "deployEmulatedOnPremisesEnvRelatedResources": "[parameters('deployEmulatedOnPremisesEnvironment')]",
        "deployJumpboxVmRelatedResources": "[parameters('deployJumpboxVm')]",
        "osImageDefinition": [
            {
                "publisher": "MicrosoftWindowsDesktop",
                "offer": "Windows-10",
                "sku": "19h2-pro",
                "version": "latest"
            },
            {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2019-Datacenter",
                "version": "latest"
            },
            {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2019-Datacenter-smalldisk",
                "version": "latest"
            }
        ],
        "diskTypeDefinition": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS"
        ],

        "numOfAttendees": "[parameters('numberOfAttendees')]",
        "attendeeOffset": 1,
        "attendeeIpAddressOffset": "[add(100, variables('attendeeOffset'))]",
        "attendeeNatPortOffset": "[add(5000, variables('attendeeOffset'))]",

        "vnetName": "emulated-on-premises-vnet",
        "jumpboxSubnetName": "jumpbox-sn",

        "jumpboxSubnetNsgName": "jumpbox-sn-nsg",

        "vnetGatewayName": "on-premfirewall-vng",
        "vnetGatewayIpName": "[concat(variables('vnetGatewayName'), '-pip')]",
        "vnetGatewayConnectionSharedKey": "define-your-shared-key-123",

        "jumpboxVmName": "jumpbox",
        "jumpboxVmSize": "[parameters('vmSize')]",
        "jumpboxOsDiskStorageAccountType": "[variables('diskTypeDefinition')[aahc.diskTypeIndex(parameters('vmOsDiskType'))]]",
        "jumpboxOsImageReference": "[variables('osImageDefinition')[aahc.osImageIndex(parameters('vmOsImage'))]]",
        "jumpboxVmAutoshutdownDailyRecurrenceTime": "[parameters('dailyAutoshutdownTime')]",
        "jumpboxVmAutoshutdownTimeZoneId": "[parameters('autoshutdownTimeZone')]",

        "avSetName": "[concat(variables('jumpboxVmName'), '-avset')]",

        "lbIpName": "[concat(variables('jumpboxVmName'), '-lb-pip')]",
        "lbName": "[concat(variables('jumpboxVmName'), '-lb')]",
        "lbFrontendIpConfigName": "LoadBalancerFrontEnd",
        "lbBackendPoolName": "jumpbox-bepool",
        "inboundNatRuleNamePrefix": "rdp-jumpbox"
    },
    "resources": [
        {
            "comments": "VNet for emulated on-premises network.",
            "condition": "[or(variables('deployEmulatedOnPremisesEnvRelatedResources'), variables('deployJumpboxVmRelatedResources'))]",
            "type": "Microsoft.Network/VirtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('vnetName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpboxSubnetNsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.152.101.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "adds-svc-sn",
                        "properties": {
                            "addressPrefix": "10.152.101.0/27"
                        }
                    },
                    {
                        "name": "[variables('jumpboxSubnetName')]",
                        "properties": {
                            "addressPrefix": "10.152.101.32/27",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpboxSubnetNsgName'))]"
                            }
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "10.152.101.224/27"
                        }
                    }
                ]
            }
        },

        {
            "comments": "NSG for jumpboxes.",
            "condition": "[or(variables('deployEmulatedOnPremisesEnvRelatedResources'), variables('deployJumpboxVmRelatedResources'))]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('jumpboxSubnetNsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow_RDP_In",
                        "properties": {
                            "direction": "Inbound",
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]   
            }
        },

        {
            "comments": "Local Network Gateways for attendees.",
            "condition": "[variables('deployEmulatedOnPremisesEnvRelatedResources')]",
            "copy": {
                "name": "numOfAttendees",
                "count": "[variables('numOfAttendees')]"
            },
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2019-11-01",
            "name": "[concat('attendee-', copyIndex(variables('attendeeIpAddressOffset')), '-lng')]",
            "location": "[variables('location')]",
            "properties": {
                "gatewayIpAddress": "[concat(copyIndex(variables('attendeeIpAddressOffset')), '.0.0.0')]",
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "[concat('10.', copyIndex(variables('attendeeIpAddressOffset')), '.0.0/22')]"
                    ]
                }
            }
        },

        {
            "comments": "Public IP Address for VPN VNet gateway.",
            "condition": "[variables('deployEmulatedOnPremisesEnvRelatedResources')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('vnetGatewayIpName')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "VPN VNet gateway as on-premises side firewall.",
            "condition": "[variables('deployEmulatedOnPremisesEnvRelatedResources')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-11-01",
            "name": "[variables('vnetGatewayName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/VirtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vnetGatewayIpName'))]"
            ],
            "properties": {
                "gatewayType": "Vpn",
                "ipConfigurations": [
                    {
                        "name": "gwipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/VirtualNetworks/subnets', variables('vnetName'), 'GatewaySubnet')]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vnetGatewayIpName'))]"
                            }
                        }
                    }
                ],
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation1",
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                }
            }
        },

        {
            "comments": "Connections for attendees.",
            "condition": "[variables('deployEmulatedOnPremisesEnvRelatedResources')]",
            "copy": {
                "name": "numOfAttendees",
                "count": "[variables('numOfAttendees')]"
            },
            "type": "Microsoft.Network/connections",
            "apiVersion": "2019-11-01",
            "name": "[concat('attendee-', copyIndex(variables('attendeeIpAddressOffset')), '-lng')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vnetGatewayName'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', concat('attendee-', copyIndex(variables('attendeeIpAddressOffset')), '-lng'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('vnetGatewayName'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', concat('attendee-', copyIndex(variables('attendeeIpAddressOffset')), '-lng'))]"
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 10,
                "sharedKey": "[variables('vnetGatewayConnectionSharedKey')]"
            }
        },

        {
            "comments": "Public IP Address for LB.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('lbIpName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "comments": "LB for inbound RDP connection to jumpbox VMs.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2019-11-01",
            "name": "[variables('lbName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbIpName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontendIpConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbIpName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBackendPoolName')]"
                    }
                ]
            }
        },
        {
            "comments": "Inbound NAT rule on LB for attendee's jumpbox VMs.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "copy": {
                "name": "numOfAttendees",
                "count": "[variables('numOfAttendees')]"
            },
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "apiVersion": "2019-11-01",
            "name": "[concat(variables('lbName'), '/', variables('inboundNatRuleNamePrefix'), copyIndex(variables('attendeeOffset')))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('lbName'), variables('lbFrontendIpConfigName'))]"
                },
                "protocol": "Tcp",
                "frontendPort": "[copyIndex(variables('attendeeNatPortOffset'))]",
                "backendPort": 3389
            }
        },

        {
            "comments": "Availability set for attendee's jumpbox VMs.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2019-07-01",
            "name": "[variables('avSetName')]",
            "location": "[variables('location')]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },

        {
            "comments": "VM as attendee's jumpbox.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "copy": {
                "name": "numOfAttendees",
                "count": "[variables('numOfAttendees')]"
            },
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')), '-nic1'))]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('jumpboxVmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')))]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('jumpboxOsDiskStorageAccountType')]"
                        },
                        "caching": "ReadWrite"
                    },
                    "imageReference": "[variables('jumpboxOsImageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')), '-nic1'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')))]",
                    "adminUsername": "[parameters('username')]",
                    "adminPassword": "[parameters('password')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "comments": "Network interface for attendee's jump box VM.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "copy": {
                "name": "numOfAttendees",
                "count": "[variables('numOfAttendees')]"
            },
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')), '-nic1')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
                "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('lbName'), concat(variables('inboundNatRuleNamePrefix'), copyIndex(variables('attendeeOffset'))))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('jumpboxSubnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('lbName'), variables('lbBackendPoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('lbName'), concat(variables('inboundNatRuleNamePrefix'), copyIndex(variables('attendeeOffset'))))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "comments": "Auto-shutdown schedule for attendee's jump box VM.",
            "condition": "[variables('deployJumpboxVmRelatedResources')]",
            "copy": {
                "name": "numOfAttendees",
                "count": "[variables('numOfAttendees')]"
            },
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "name": "[concat('shutdown-computevm-', variables('jumpboxVmName'), copyIndex(variables('attendeeOffset')))]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset'))))]"
            ],
            "properties": {
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('jumpboxVmName'), copyIndex(variables('attendeeOffset'))))]",
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "timeZoneId": "[variables('jumpboxVmAutoshutdownTimeZoneId')]",
                "dailyRecurrence": {
                    "time": "[variables('jumpboxVmAutoshutdownDailyRecurrenceTime')]"
                },
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 15
                }
            }
        }
    ],
    "outputs": {}
}
