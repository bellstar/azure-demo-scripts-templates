{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "onPremisesSideNamePrefix": {
            "type": "string",
            "defaultValue": "onprem",
            "metadata": {
                "description": "The resource name prefix for the on-premises side resources."
            }
        },
        "azureSideNamePrefix": {
            "type": "string",
            "defaultValue": "azure",
            "metadata": {
                "description": "The resource name prefix for the Azure side resources."
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "vmadmin",
            "metadata": {
                "description": "The admin user name for both side VMs."
            }
        },
        "adminPassword": {
            "type": "secureString",
            "metadata": {
                "description": "The admin user password for both side VMs."
            }
        }
    },
    "variables": {

        // On-premises side.

        "onPremisesLocation": "[resourceGroup().location]",
        "onPremisesVNetName": "[concat(parameters('onPremisesSideNamePrefix'), '-vnet')]",
        "onPremisesVpnGwName": "[concat(parameters('onPremisesSideNamePrefix'), '-vpngw')]",
        "onPremisesVpnGwIpName": "[concat(parameters('onPremisesSideNamePrefix'), '-vpngw-ip')]",
        "onPremisesVmName": "[concat(parameters('onPremisesSideNamePrefix'), '-vm1')]",
        "onPremisesVmOsDiskName": "[concat(parameters('onPremisesSideNamePrefix'), '-vm1-osdisk')]",
        "onPremisesVmNicName": "[concat(parameters('onPremisesSideNamePrefix'), '-vm1-nic')]",
        "onPremisesVmIpName": "[concat(parameters('onPremisesSideNamePrefix'), '-vm1-ip')]",
        "onPremisesVmNsgName": "[concat(parameters('onPremisesSideNamePrefix'), '-vm1-nsg')]",

        // Azure side.

        "azureLocation": "[resourceGroup().location]",
        "azureVNetName": "[concat(parameters('azureSideNamePrefix'), '-vnet')]",
        "azureVpnGwName": "[concat(parameters('azureSideNamePrefix'), '-vpngw')]",
        "azureVpnGwIpName": "[concat(parameters('azureSideNamePrefix'), '-vpngw-ip')]",
        "azureVmName": "[concat(parameters('azureSideNamePrefix'), '-vm1')]",
        "azureVmOsDiskName": "[concat(parameters('azureSideNamePrefix'), '-vm1-osdisk')]",
        "azureVmNicName": "[concat(parameters('azureSideNamePrefix'), '-vm1-nic')]",
        "azureVmIpName": "[concat(parameters('azureSideNamePrefix'), '-vm1-ip')]",
        "azureVmNsgName": "[concat(parameters('azureSideNamePrefix'), '-vm1-nsg')]"
    },
    "resources": [

        //
        // On-premises side.
        //

        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[variables('onPremisesVNetName')]",
            "location": "[variables('onPremisesLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "10.0.255.0/24"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[variables('onPremisesVpnGwIpName')]",
            "location": "[variables('onPremisesLocation')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-09-01",
            "name": "[variables('onPremisesVpnGwName')]",
            "location": "[variables('onPremisesLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('onPremisesVpnGwIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('onPremisesVNetName'))]"
            ],
            "properties": {
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation1",
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('onPremisesVpnGwIpName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('onPremisesVNetName'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "enableBgp": false,
                "activeActive": false
            }
        },

        // On-premises side virtual machine.

        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('onPremisesVmIpName')]",
            "location": "[variables('onPremisesLocation')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('onPremisesVmNsgName')]",
            "location": "[variables('onPremisesLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]   
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[variables('onPremisesVmNicName')]",
            "location": "[variables('onPremisesLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('onPremisesVmIpName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('onPremisesVmNsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('onPremisesVNetName'), 'default')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('onPremisesVmIpName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('onPremisesVmNsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('onPremisesVmName')]",
            "location": "[variables('onPremisesLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('onPremisesVmNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[variables('onPremisesVmOsDiskName')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter-smalldisk",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('onPremisesVmNicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('onPremisesVmName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        },

        //
        // Azure side.
        //

        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[variables('azureVNetName')]",
            "location": "[variables('azureLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "192.168.0.0/24"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "192.168.255.0/24"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[variables('azureVpnGwIpName')]",
            "location": "[variables('azureLocation')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-09-01",
            "name": "[variables('azureVpnGwName')]",
            "location": "[variables('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('azureVpnGwIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('azureVNetName'))]"
            ],
            "properties": {
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "vpnGatewayGeneration": "Generation1",
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('azureVpnGwIpName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('azureVNetName'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "enableBgp": false,
                "activeActive": false
            }
        },

        // Azure side virtual machine.

        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('azureVmIpName')]",
            "location": "[variables('azureLocation')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIpAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('azureVmNsgName')]",
            "location": "[variables('azureLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]   
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[variables('azureVmNicName')]",
            "location": "[variables('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses/', variables('azureVmIpName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('azureVmNsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('azureVNetName'), 'default')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('azureVmIpName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('azureVmNsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('azureVmName')]",
            "location": "[variables('azureLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('azureVmNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[variables('azureVmOsDiskName')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter-smalldisk",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('azureVmNicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('azureVmName')]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUserName": {
            "type": "string",
            "value": "[parameters('adminUserName')]"
        }
    }
}
